root: true

parserOptions:
  ecmaVersion: 2022
  sourceType: module
  project:
    - ./tsconfig.json
    - ./backend/tsconfig.json
    - ./frontend/tsconfig.json
    - ./shared/tsconfig.json

settings:
  typescript: true
  node: true

ignorePatterns:
  - node_modules
  - build

extends:
  - eslint:recommended
  - plugin:import/recommended
  - plugin:import/typescript
  - plugin:@typescript-eslint/recommended-type-checked
  - plugin:@typescript-eslint/strict-type-checked
  - plugin:@typescript-eslint/stylistic-type-checked
  - plugin:unicorn/recommended
  - plugin:sonarjs/recommended

plugins:
  - simple-import-sort

rules:
  no-restricted-syntax:
    - error
    - selector: SwitchCase > *.consequent[type!="BlockStatement"]
      message: Switch cases without blocks are not allowed.
    - selector: ExportAllDeclaration,ImportAllDeclaration
      message: Export/Import all (*) is forbidden.
    - selector: ExportNamedDeclaration[declaration!=null]
      message: Exports should be at the end of the file.
  no-console:
    - error
  max-params:
    - error
    - 4
  no-multiple-empty-lines:
    - error
    - max: 1
  curly:
    - error
    - all
  unicorn/no-null:
    - off
  unicorn/prevent-abbreviations:
    - off
  unicorn/filename-case:
    - off # ls-lint handles this rule
  '@typescript-eslint/padding-line-between-statements':
    - error
    - blankLine: never
      prev: export
      next: export
    - blankLine: always
      prev:
        - const
        - class
      next: export
  simple-import-sort/imports:
    - error
  simple-import-sort/exports:
    - error
  import/no-unresolved:
    - off
  import/newline-after-import:
    - error
    - count: 1
  import/no-default-export:
    - error
  import/group-exports:
    - error
  import/consistent-type-specifier-style:
    - error
    - prefer-top-level
  no-unused-expressions:
    - off
  prefer-promise-reject-errors:
    - off
  '@typescript-eslint/prefer-promise-reject-errors':
    - off
  '@typescript-eslint/no-unused-expressions':
    - error
    - allowShortCircuit: true
      allowTernary: true
      allowTaggedTemplates: true
      enforceForJSX: true
  '@typescript-eslint/no-misused-promises':
    - error
    - checksVoidReturn: false
  '@typescript-eslint/no-import-type-side-effects':
    - error
  '@typescript-eslint/consistent-type-definitions':
    - error
    - type
  '@typescript-eslint/non-nullable-type-assertion-style':
    - off
  '@typescript-eslint/return-await':
    - off
  '@typescript-eslint/consistent-type-imports':
    - error
  '@typescript-eslint/consistent-type-exports':
    - error
    - fixMixedExportsWithInlineTypeSpecifier: false
  '@typescript-eslint/explicit-function-return-type':
    - error
    - allowTypedFunctionExpressions: true
  '@typescript-eslint/no-empty-interface':
    - error
    - allowSingleExtends: true
  '@typescript-eslint/explicit-member-accessibility':
    - error
  '@typescript-eslint/object-curly-spacing':
    - error
    - always
  '@typescript-eslint/semi':
    - error
    - always
  'no-magic-numbers':
    - off
  '@typescript-eslint/no-magic-numbers':
    - error
    - ignore:
        - 0
        - 1
      ignoreEnums: true
      ignoreNumericLiteralTypes: true
      ignoreReadonlyClassProperties: true
      ignoreTypeIndexes: true
  '@typescript-eslint/no-unsafe-member-access':
    - off
  '@typescript-eslint/no-unsafe-assignment':
    - off
  '@typescript-eslint/no-unsafe-call':
    - off
  '@typescript-eslint/no-unsafe-return':
    - off
  '@typescript-eslint/no-unsafe-argument':
    - off
  '@typescript-eslint/restrict-template-expressions':
    - off
  '@typescript-eslint/no-redundant-type-constituents':
    - off
overrides:
  - files:
      - vitest.config.ts
    rules:
      'import/no-default-export':
        - off
